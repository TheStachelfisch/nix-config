#####################################################################
#   Miscellaneous Settings
#####################################################################
[include mainsail.cfg]

[gcode_arcs]

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[exclude_object]

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 10.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 175.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 10.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

#####################################################################
#   Stepper Autototune Configuration
#####################################################################
[autotune_tmc extruder]
motor: moons-cse14hra1l410a

[autotune_tmc stepper_x]
motor: moons-ms17hd6p420I-04
[autotune_tmc stepper_y]
motor: moons-ms17hd6p420I-04

[autotune_tmc stepper_z]
motor: moons-ms17hd6p420I-04
[autotune_tmc stepper_z1]
motor: moons-ms17hd6p420I-04
[autotune_tmc stepper_z2]
motor: moons-ms17hd6p420I-04
[autotune_tmc stepper_z3]
motor: moons-ms17hd6p420I-04

#####################################################################
#   Voron Tap Settings
#####################################################################
#[stepper_z]
#endstop_pin: probe:z_virtual_endstop

#[probe]
#pin: SB2040v2:LIMIT_1
#x_offset: 0
#y_offset: 0
#z_offset: 0
#speed: 3.0
#lift_speed: 10
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3

#activate_gcode:
#    {% set PROBE_TEMP = 150 %}
#    {% set MAX_TEMP = PROBE_TEMP + 5 %}
#    {% set ACTUAL_TEMP = printer.extruder.temperature %}
#    {% set TARGET_TEMP = printer.extruder.target %}
#
#    {% if TARGET_TEMP > PROBE_TEMP %}
#        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#        M109 S{ PROBE_TEMP }
#    {% else %}
#        # Temperature target is already low enough, but nozzle may still be too hot.
#        {% if ACTUAL_TEMP > MAX_TEMP %}
#            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#        {% endif %}
#    {% endif %}
    

#####################################################################
#   Mellow Fly SB2040 V2 Settings
#####################################################################
#[include fly-sb2040-v2.cfg]
#
#[mcu SB2040v2]
#canbus_uuid: 7644bc9f26bb
#
#[temperature_sensor SB2040v2]
#sensor_type: temperature_mcu
#sensor_mcu: SB2040v2
#
#[temperature_sensor chamber]
#sensor_type: Generic 3950
#sensor_pin: SB2040v2:TH1
#
##  Hotend Fan
#[heater_fan hotend_fan]
#pin: SB2040v2:FAN1
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0

##  Print Cooling Fan
#[fan]
#pin: SB2040v2:FAN0
#kick_start_time: 0.5
#cycle_time: 0.15
#off_below: 0.10

##  Extruder Configuration
#[extruder]
#step_pin: SB2040v2:EXT_STEP
#dir_pin: !SB2040v2:EXT_DIR
#enable_pin: !SB2040v2:EXT_EN
#rotation_distance: 22.90574061
#gear_ratio: 50:10 
#microsteps: 32
#full_steps_per_rotation: 200
#max_extrude_only_distance: 1000.0
#max_extrude_only_velocity: 50.0
#max_extrude_only_accel: 1500
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: SB2040v2:HE0
#sensor_type: PT1000
#sensor_pin: SB2040v2:TH0
#pullup_resistor: 1000
#min_temp: 0
#max_temp: 350
#max_power: 1.0
#min_extrude_temp: 160
#pressure_advance_smooth_time: 0.040

##  Extruder Motor
#[tmc2240 extruder]
#uart_pin: SB2040v2:EXT_UART
#interpolate: true
#run_current: 0.5
#stealthchop_threshold: 0

##  RGB Lighting
#[neopixel SB2040v2_led]
#pin: SB2040v2:RGBLED
#chain_count: 3
#color_order: GRBW
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0

## X Endstop
#[stepper_x]
#endstop_pin: SB2040v2:LIMIT_2

#[adxl345]
#cs_pin: SB2040v2:ADXL
#spi_software_sclk_pin: SB2040v2:gpio0
#spi_software_mosi_pin: SB2040v2:gpio3
#spi_software_miso_pin: SB2040v2:gpio2

#[resonance_tester]
#accel_chip:adxl345
#probe_points:
#    175,175,20

#####################################################################
#   BTT SB2209 RP2040 Settings
#####################################################################
[mcu EBBCan]
canbus_uuid: 4cf752eeb15f

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio28

#[adxl345]
#cs_pin: EBBCan:gpio1
#spi_software_sclk_pin: EBBCan:gpio2
#spi_software_mosi_pin: EBBCan:gpio0
#spi_software_miso_pin: EBBCan:gpio3
#axes_map: z,-y,x

#[resonance_tester]
#probe_points: 175, 175, 20
#accel_chip: adxl345

[extruder]
step_pin: EBBCan:gpio18
dir_pin: EBBCan:gpio19
enable_pin: !EBBCan:gpio17
rotation_distance: 22.90574061
gear_ratio: 50:10 
microsteps: 32
full_steps_per_rotation: 200
max_extrude_only_distance: 1000.0
max_extrude_only_velocity: 50.0
max_extrude_only_accel: 1500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7
sensor_type: PT1000
sensor_pin: EBBCan:gpio27
min_temp: 0
max_temp: 350
max_power: 1.0
min_extrude_temp: 160

## X Endstop
[stepper_x]
endstop_pin: EBBCan:gpio24

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
interpolate: true
run_current: 0.650

[fan]
pin: EBBCan:gpio14
max_power: 1.0
off_below: 0.40
kick_start_time: 0.5
cycle_time: 0.15

[heater_fan hotend_fan]
pin: EBBCan:gpio15
max_power: 1.0
tachometer_pin: EBBCan:gpio12
heater: extruder
kick_start_time: 0.5
heater_temp: 50.0
fan_speed: 0.5

[neopixel hotend_rgb]
pin: EBBCan:gpio16
chain_count: 3
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

#####################################################################
#   Cartographer Settings
#####################################################################
[mcu scanner]
canbus_uuid: b2b7f03dd539


[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 26.96                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.00728
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[bed_mesh]
zero_reference_position: 175, 175    
speed: 400
horizontal_move_z: 5
mesh_min: 40, 40
mesh_max: 310, 310
probe_count: 19, 19
algorithm: bicubic

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

[adxl345]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20

[safe_z_home]
home_xy_position: 175,175
z_hop: 10

[stepper_z]
endstop_pin: probe:z_virtual_endstop
homing_retract_dist: 0

#####################################################################
#   Octopus Pro V1.2 MCU Settings
#####################################################################
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_24002E000C51313339373836-if00
restart_method: command

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 4000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: true
run_current: 0.8
#stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connectod to PG6
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
#stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
position_max: 310
position_min: -5
homing_speed: 8
second_homing_speed: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 0.8
#stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 0.8
#stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
#stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: true
run_current: 0.8
#stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA3
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
max_power: 1.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Fan Control
#####################################################################

##  Chamber Cooling Fan - FAN0
[gcode_macro _BEDFANVARS]
variable_threshold: 100		# If bed temp target is above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
variable_fast: 0.6		# Fan speed once bed temp is reached  
variable_slow: 0.2		# Fan speed while bed is heating
gcode:

[fan_generic BedFans]
pin: PA8

##  Controller fans - FAN1 & FAN2
[multi_pin controller_fan_pins]
pins: PD12, PE5

[controller_fan controller_fan]
pin: multi_pin:controller_fan_pins
kick_start_time: 0.5
fan_speed: 0.5
heater: heater_bed

##  Exhaust fan - FAN3
[fan_generic exhaust_fan]
pin: PD13
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
##Octopus 1.0 & 1.1, Octopus PRO 1.0
#pin: PB10
##Octopus PRO 1.1
#pin: PB0
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
timeout: 1800

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:175,175
speed:100
z_hop:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
gantry_corners:
  -60,-10
  410,420
##  Probe points
points:
  50,25
  50,275
  300,275
  300,25

speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Macros
#####################################################################
# Conditional homing. Only homes Z if already homed
[gcode_macro _CG28]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
        G28 Z
    {% else %}
        G28
    {% endif %}


[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro _BEDFANVARS]
variable_threshold: 90		# If bed temp target is above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
variable_fast: 0.6		# Fan speed once bed temp is reached  
variable_slow: 0.2		# Fan speed while bed is heating
gcode:

[gcode_macro BEDFANSSLOW]
gcode:
	# Vars
	{% set SLOW = printer["gcode_macro _BEDFANVARS"].slow|float %}
	
	SET_FAN_SPEED FAN=BedFans SPEED={SLOW}

[gcode_macro BEDFANSFAST]
gcode:
	# Vars
	{% set FAST = printer["gcode_macro _BEDFANVARS"].fast|float %}
	
	SET_FAN_SPEED FAN=BedFans SPEED={FAST}

[gcode_macro BEDFANSOFF]
gcode:
	SET_FAN_SPEED FAN=BedFans SPEED=0

[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set BED_TEMP = params.BED|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|float %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(0)|float %}
    {% set MESH_MIN = params.MESH_MIN|default("40,40")|string %}
    {% set MESH_MAX = params.MESH_MAX|default("310,310")|string %}
    {% set MESH_PROBE_COUNT = params.MESH_PROBE_COUNT|default("5,5")|string %}
    {% set MESH_ALGO = params.MESH_ALGO|default("bicubic")|string %}

    SET_GCODE_OFFSET Z=0                                 # Set offset to 0

    SET_DISPLAY_TEXT MSG="Preparing Print..."
    _CG28                            # home all axes
    G90                            # absolute positioning 

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int >= 85 %}
    SET_DISPLAY_TEXT MSG="Heating Bed To {BED_TEMP}ºC"           # Display info on display
    #STATUS_HEATING                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the part cooling fan

    BEDFANSSLOW

    G1 X175 Y175 Z150 F9000                    # Go to center of the bed and a bit up to circulate air
    M190 S{BED_TEMP}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoaking Chamber To {CHAMBER_TEMP}ºC"  # Display info on display
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER_TEMP}   # Waits for chamber temp
    BEDFANSFAST # Enable Bed Fans once chamber is heated up

  # If the bed temp is not over 85c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Heating Bed To {BED_TEMP}ºC"           # Display info on display
    #STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 X175 Y175 Z15 F9000                    # Go to center of the bed
    M190 S{BED_TEMP}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoaking For 5 min"              
    G4 P60000   
    SET_DISPLAY_TEXT MSG="Heatsoaking For 4 min"               
    G4 P60000
    SET_DISPLAY_TEXT MSG="Heatsoaking For 3 min"               
    G4 P60000
    SET_DISPLAY_TEXT MSG="Heatsoaking For 2 min"               
    G4 P60000
    SET_DISPLAY_TEXT MSG="Heatsoaking For 1 min"               
    G4 P60000
  {% endif %}

    SET_DISPLAY_TEXT MSG="Heating Hotend To 150ºC For Probing"                   # display info on display
    M109 S150                      # set extruder to 150 for voron tap probing

    SET_DISPLAY_TEXT MSG="Quad Gantry Leveling"
    G28 Z                          # home z again once extruder and bed are warm
    QUAD_GANTRY_LEVEL              # level Gantry
    G28 Z                          # home z again after QGL

    SET_DISPLAY_TEXT MSG="Creating Bed Mesh"
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE ADAPTIVE=1

    CARTOGRAPHER_TOUCH

    SET_DISPLAY_TEXT MSG="Heating Hotend To {EXTRUDER_TEMP}ºC"
    G1 X175 Y175 X15 F9000 # go to center
    M107
    M109 S{EXTRUDER_TEMP}          # set and wait for hot end to reach temp

    # Get ready to print by doing a primeline
    SET_DISPLAY_TEXT MSG="Printing..."                 # Display info on display
    # STATUS_PRINTING                                       # Set LEDs to printing-mode
    G1 X{175 - 50} Y4 F9000                           # Go to starting point
    G1 Z0.4                                               # Raise Z to 0.4
    G91                                                   # Incremental positioning 
    G1 X100 E20 F1000                                     # Primeline
    G90                                                   # Absolute position
    


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament

    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 55.281
#*# pid_ki = 2.750
#*# pid_kd = 277.785
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.476
#*# pid_ki = 1.684
#*# pid_kd = 75.015
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 55.6
#*# shaper_type_y = zv
#*# shaper_freq_y = 38.6
#*#
#*# [scanner]
#*# mode = touch
#*# scanner_touch_threshold = 2500
#*# scanner_touch_speed = 3
#*# scanner_touch_z_offset = 0.050
#*#
#*# [scanner model default]
#*# model_coef = 1.4652378546453535,
#*# 	1.7951742812214102,
#*# 	0.7472428470103541,
#*# 	0.31115272823024354,
#*# 	0.48667260532774803,
#*# 	0.5972907625830388,
#*# 	-0.39407639310347276,
#*# 	-0.6030809311279505,
#*# 	0.34509854469526013,
#*# 	0.3506040014622095
#*# model_domain = 3.1663978727680013e-07,3.3227885762525054e-07
#*# model_range = 0.200000,5.100000
#*# model_temp = 24.208989
#*# model_offset = 0.00000
#*# model_mode = touch
#*# model_fw_version = CARTOGRAPHER 5.1.0

